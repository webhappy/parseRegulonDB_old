{
    "contents" : "library('edgeR')\nlibrary(ggplot2)\nlibrary(plyr)\nlibrary(reshape2)\ndata_0502 <- read.csv('20140502.csv',quote=\"\")\nrownames(data_0502) <- data_0502$seq\nallData <- read.csv('All data - 32992 with LRs.csv',quote=\"\")\nrownames(allData) <- allData$seq\n\ninitCounts <- function (counts) {\n  group <- factor(c(1,2))\n  row.names(counts) <- data_0502$seq\n  y <- DGEList(counts=counts,group=group,genes=data_0502$seq)\n  y <- calcNormFactors(y)\n  counts$before <-(counts[,1]+1) * y$samples[1,'norm.factors']\n  counts$after <- (counts[,2]+1) * y$samples[2,'norm.factors']\n  return(counts)\n}\n\ncalcFC <- function (counts) {\n  return(data.frame(counts$after / counts$before, row.names=row.names(counts)))\n}\n\ncounts30 <- data.frame(data_0502$count_aerobic.t0.1_control, data_0502$count_aerobic.t30.1_control)\ncounts30 <- initCounts(counts30)\nFC30 <- calcFC(counts30)\n\ncounts60 <- data.frame(data_0502$count_aerobic.t0.1_control, data_0502$count_aerobic.t60.1_control)\ncounts60 <- initCounts(counts60)\nFC60 <- calcFC(counts60)\n\ncountsNor <- data.frame(data_0502$count_aerobic.t0.1_control, data_0502$count_aerobic.t180.6_Nor)\ncountsNor <- initCounts(countsNor)\nFCNor <- calcFC(countsNor)\n\n### prepare output file for web UI\ncountsNor <- data.frame(data_0502$count_aerobic.t0.1_control, data_0502$count_aerobic.t180.6_Nor)\ny <- DGEList(counts=countsNor,group=factor(c(1,2)),genes=data_0502$seq)\ny <- calcNormFactors(y)\net <- exactTest(y, dispersion=.1^2)\ncounts <- countsNor # alias counts to actual variable\nmessage <- paste( counts[,1],' -> ',counts[,2],sep='')\nfinalTable <- data.frame(as.character(data_0502$seq),et$table$PValue,et$table$logFC,message)\ncolnames(finalTable) <- c('Seq','Pval','LogFC','message')\nwrite.csv(finalTable,'0502_nor.csv',row.names=FALSE)\n\n# investigate\ncounts <- merge(allData[,c('seq','count_t4_3')], data_0502[,c('seq','count_aerobic.t0.1_control','count_aerobic.t30.1_control',\n                   'count_aerobic.t60.1_control', 'count_aerobic.t180.1_control')],by='seq')\ncounts <- data.frame(counts[,2:ncol(counts)],row.names=counts[,1])\ntemp <- DGEList(counts=counts,group=factor(c(1:5)),genes=data_0502$seq)\ntemp <- calcNormFactors(temp)\ncountsNormalized <- countsOnly\nrownames(countsNormalized) <- data_0502$seq\n\n### prep normalized counts\ncountsOnly <- data_0502[,grep('^count',colnames(data_0502))]\ntemp <- DGEList(counts=countsOnly, group=factor(1:7), genes=row.names(countsOnly))\ntemp <- calcNormFactors(temp)\nfor (i in 1:ncol(temp)) {  countsNormalized[,i] <- countsOnly[,i] * temp$samples$norm.factors[i] }\ncountsNormalized <- countsNormalized[,c(6,4,2,7,1,3,5)]\ncolnames(countsNormalized) <- c('t0_control','t30_control','t60_control','t180_control','t30_Rif','t180_Nor','t180_Gent')\n\ncountsAdj <- countsNormalized + 1\ncountsAdj <- log2(countsAdj)\n",
    "created" : 1399316528666.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1847817108",
    "id" : "8EDB36FE",
    "lastKnownWriteTime" : 1399425179,
    "path" : "~/PycharmProjects/parseRegulonDB/diffExpression/investigate_20140502.R",
    "project_path" : "investigate_20140502.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}