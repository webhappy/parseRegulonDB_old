head(subset(counts,select='sum'))
finalTable <- data.frame(allData$RegulonDBID,allData$pos,as.character(allData$seq),et$table$PValue,et$table$logFC,apply(counts[,1:length(counts)],1,sum))
colnames(finalTable) <- c("RegulonDBID","pos","seq","pval",'logFC','countsSum')
counts$sum <- apply(counts,1,sum)
finalTable$seq <- as.character(finalTable$seq)
finalTable <- merge(finalTable,subset(counts,select='sum'),by.y='row.names',by.x='seq')
head(finalTable)
plot(finalTable$countsSum ~ finalTable$pval)
plot(log(finalTable$countsSum) ~ finalTable$pval)
finalTable['aaagtgttttttgtataaat']
finalTable[seq=='aaagtgttttttgtataaat']
finalTable$seq=='aaagtgttttttgtataaat'
finalTable[finalTable$seq=='aaagtgttttttgtataaat',]
countsSum
counts
counts['aaagtgttttttgtataaat']
counts['aaagtgttttttgtataaat',]
counts <- allData[,c(44:45,41:42)] # aerobic data
finalTable <- data.frame(allData$RegulonDBID,allData$pos,as.character(allData$seq),et$table$PValue,et$table$logFC,apply(counts[,1:length(counts)],1,sum))
counts$sum <- apply(counts,1,sum)
finalTable <- data.frame(allData$RegulonDBID,allData$pos,as.character(allData$seq),et$table$PValue,et$table$logFC,apply(counts[,1:length(counts)],1,sum))
counts['aaagtgttttttgtataaat',]
finalTable <- data.frame(allData$RegulonDBID,allData$pos,as.character(allData$seq),et$table$PValue,et$table$logFC,apply(counts[,1:length(counts)],1,sum))
finalTable[finalTable$seq=='aaagtgttttttgtataaat',]
allData <- read.csv('All data - 32992 with LRs.csv',quote="")
counts <- allData[,c(5,6,8,15:17)]
counts <- allData[,c(44:45,41:42)] # aerobic data
group <- factor(c(1,1,2,2))
row.names(counts) <- allData$seq
y <- DGEList(counts=counts,group=group,genes=allData$seq)
y <- calcNormFactors(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
topTags(et)
head(counts)
fdr <- p.adjust(et$table[,3],method='fdr')
library('edgeR')
library(ggplot2)
library(plyr)
library(reshape2)
allData <- read.csv('All data - 32992 with LRs.csv',quote="")
counts <- allData[,c(5,6,8,15:17)]
counts <- allData[,c(44:45,41:42)] # aerobic data
group <- factor(c(1,1,2,2))
row.names(counts) <- allData$seq
y <- DGEList(counts=counts,group=group,genes=allData$seq)
y <- calcNormFactors(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
topTags(et)
head(counts)
fdr <- p.adjust(et$table[,3],method='fdr')
finalTable <- data.frame(allData$RegulonDBID,allData$pos,as.character(allData$seq),et$table$PValue,et$table$logFC,apply(counts[,1:length(counts)],1,sum))
colnames(finalTable) <- c("RegulonDBID","pos","seq","pval",'logFC','countsSum')
head(finalTable)
finalTable['aaagtgttttttgtataaat',]
dbWriteTable(con,'aerobic_PVALS',finalTable,overwrite=TRUE,row.names=FALSE)
con <- dbConnect(MySQL(),dbname="t")
dbWriteTable(con,'aerobic_PVALS',finalTable,overwrite=TRUE,row.names=FALSE)
hist(et$table[et$table[,3]<.05,1],xlab="log fold-change for sgRNAs with P-val < .05",main="Log fold-change of 8,026 sgRNAs")
hist(et$table[fdr<.05,1],xlab="log fold-change for sgRNAs with FDR < .05")
hist(fdr,50,xlab="FDR per sgRNA",main="")
hist(et$table[,3],50,xlab="P-val per sgRNA",main="")
counts
head(finalTable)
hist(finalTable$countsSum)
hist(log(finalTable$countsSum))
hist(finalTable$countsSum)
hist(log(finalTable$countsSum))
library('edgeR')
library(ggplot2)
library(plyr)
library(reshape2)
allData <- read.csv('20140502.csv',quote="")
counts <- data.frame(allData$count_aerobic.t0.1_control, allData$count_aerobic.t30.1_control)
counts <- data.frame(allData$count_aerobic.t0.1_control, allData$count_aerobic.t30.1_control)
group <- factor(c(1,2))
row.names(counts) <- allData$seq
y <- DGEList(counts=counts,group=group,genes=allData$seq)
y <- calcNormFactors(y)
y <- estimateCommonDisp(y)
y <- estimateTagwiseDisp(y)
et <- exactTest(y)
y
y <- DGEList(counts=counts,group=group,genes=allData$seq)
y
y <- calcNormFactors(y)
y
et <- exactTest(y, dispersion=.1^2)
et
y
et
y$samples$norm.factors
y$samples
y$samples[allData.count_aerobic.t0.1_control,]
y$samples['allData.count_aerobic.t0.1_control',]
counts$before <- counts$allData.count_aerobic.t0.1_controly$samples['allData.count_aerobic.t0.1_control','norm.factors']
head(counts)
counts$before
counts$before <- counts$allData.count_aerobic.t0.1_control*y$samples['allData.count_aerobic.t0.1_control','norm.factors']
head(counts)
counts$after <- counts[,2] * y$samples[2,'norm.factors']
head(counts)
FC = counts$after / counts$before
head(FC)
FC = data.frame(counts$after / counts$before)
head(FC)
FC = data.frame(counts$after / counts$before)
head(FC)
head(counts)
row.names(counts)
counts$after / counts$before
FC = data.frame(counts$after / counts$before, row.names=counts)
FC = data.frame(counts$after / counts$before, row.names=row.names(counts))
head(FC)
head(counts)
hist(FC)
FC
head(FC)
summary(FC)
hist(FC)
hist(FC[,1])
counts$before <-(counts[,1]+1) * y$samples[1,'norm.factors']
counts$after <- (counts[,2]+1) * y$samples[2,'norm.factors']
FC = data.frame(counts$after / counts$before, row.names=row.names(counts))
hist(log2(FC))
hist(log2(FC[,1]))
hist(counts$before)
sum(counts$before < 10)
counts <- data.frame(allData$count_aerobic.t0.1_control, allData$count_aerobic.t30.1_control)
initCounts <- function (counts) {
group <- factor(c(1,2))
row.names(counts) <- allData$seq
y <- DGEList(counts=counts,group=group,genes=allData$seq)
y <- calcNormFactors(y)
counts$before <-(counts[,1]+1) * y$samples[1,'norm.factors']
counts$after <- (counts[,2]+1) * y$samples[2,'norm.factors']
return counts
}
initCounts <- function (counts) {
group <- factor(c(1,2))
row.names(counts) <- allData$seq
y <- DGEList(counts=counts,group=group,genes=allData$seq)
y <- calcNormFactors(y)
counts$before <-(counts[,1]+1) * y$samples[1,'norm.factors']
counts$after <- (counts[,2]+1) * y$samples[2,'norm.factors']
return(counts)
}
counts <- initCounts(counts)
calcFC <- function (counts) {
return(data.frame(counts$after / counts$before, row.names=row.names(counts)))
}
counts30 <- data.frame(allData$count_aerobic.t0.1_control, allData$count_aerobic.t30.1_control)
counts30 <- initCounts(counts)
FC30 <- calcFC(counts30)
counts30 <- initCounts(counts)
counts30 <- data.frame(allData$count_aerobic.t0.1_control, allData$count_aerobic.t30.1_control)
counts30 <- initCounts(counts30)
FC30 <- calcFC(counts30)
head(counts30)
head(FC30)
counts60 <- data.frame(allData$count_aerobic.t0.1_control, allData$count_aerobic.t60.1_control)
counts60 <- initCounts(counts60)
FC60 <- calcFC(counts60)
head(FC60)
View(counts)
View(counts)
remote(counts)
remove(counts)
head(allData)
View(allData)
counts <- data.frame(allData$count_aerobic.t0.1_control, allData$count_aerobic.t30.1_control,
allData$count_aerobic.t60.1_control, allData$count_aerobic.t180.1_control)
View(counts)
remove(finalTable)
1:4
temp <- DGEList(counts=counts,group=factor(c(1:4)),genes=allData$seq)
temp <- calcNormFactors(temp)
temp
counts * temp$samples$norm.factors
head(counts * temp$samples$norm.factors)
temp$samples
head(counts * temp$samples$norm.factors')
''
countsNormalized$t0 <- counts$allData.count_aerobic.t0.1_control * temp$samples$norm.factors[1]
countsNormalized <- data.frame()
countsNormalized$t0 <- counts$allData.count_aerobic.t0.1_control * temp$samples$norm.factors[1]
countsNormalized <- data.frame(counts$allData.count_aerobic.t0.1_control * temp$samples$norm.factors[1])
countsNormalized <- data.frame(t0=counts$allData.count_aerobic.t0.1_control * temp$samples$norm.factors[1])
countsNormalized <- data.frame(t0=counts$allData.count_aerobic.t0.1_control * temp$samples$norm.factors[1],
t30=counts$allData.count_aerobic.t30.1_control * temp$samples$norm.factors[2],
t60=counts$allData.count_aerobic.t60.1_control * temp$samples$norm.factors[3],
t180=counts$allData.count_aerobic.t180.1_control * temp$samples$norm.factors[4],)
countsNormalized <- data.frame(t0=counts$allData.count_aerobic.t0.1_control * temp$samples$norm.factors[1])
countsNormalized <- data.frame(t0=counts$allData.count_aerobic.t0.1_control * temp$samples$norm.factors[1],
t30=counts$allData.count_aerobic.t30.1_control * temp$samples$norm.factors[2])
countsNormalized <- data.frame(t0=counts$allData.count_aerobic.t0.1_control * temp$samples$norm.factors[1],
t30=counts$allData.count_aerobic.t30.1_control * temp$samples$norm.factors[2],
t60=counts$allData.count_aerobic.t60.1_control * temp$samples$norm.factors[3],
t180=counts$allData.count_aerobic.t180.1_control * temp$samples$norm.factors[4])
head(countsNormalized)
rownames(countsNormalized) <- rownames(counts)
head(countsNormalized)
rownames(countsNormalized) <- rownames(allData)
head(countsNormalized)
head(rownames(allData))
rownames(countsNormalized) <- allData$seq
head(countsNormalized)
View(countsNormalized)
temp$samples
data_0502 <- read.csv('20140502.csv',quote="")
allData <- read.csv('20140502.csv',quote="")
allData <- read.csv('All data - 32992 with LRs.csv',quote="")
View(allData)
counts <- data.frame(allData$count_t4_3, data_0502$count_aerobic.t0.1_control, data_0502$count_aerobic.t30.1_control,
data_0502$count_aerobic.t60.1_control, data_0502$count_aerobic.t180.1_control)
temp <- DGEList(counts=counts,group=factor(c(1:5)),genes=data_0502$seq)
temp <- calcNormFactors(temp)
temp
countsNormalized <- data.frame(t0Orig=counts$allData.count_t4_3*temp$samples$norm.factors[1],
t0=counts$data_0502.count_aerobic.t0.1_control * temp$samples$norm.factors[2],
t30=counts$data_0502.count_aerobic.t30.1_control * temp$samples$norm.factors[3],
t60=counts$data_0502.count_aerobic.t60.1_control * temp$samples$norm.factors[4],
t180=counts$data_0502.count_aerobic.t180.1_control * temp$samples$norm.factors[5])
rownames(countsNormalized) <- data_0502$seq
head(countsNormalized)
plot(countsNormalized$t0Orig ~ countsNormalized$t0)
plot(allData$count_t4_3 ~ allData$count_t0_3)
plot(allData$count_t8_3 ~ allData$count_t0_3)
plot(allData$count_t4_3 ~ allData$count_t0_3)
plot(allData$count_t0_3 ~ countsNormalized$t0)
plot(allData$count_t4_3 ~ countsNormalized$t0)
plot(allData$count_t4_3 ~ allData$count_t0_3)
plot(countsNormalized$t0 ~ countsNormalized$t30)
plot(countsNormalized$t0 ~ countsNormalized$t60)
plot(countsNormalized$t0 ~ countsNormalized$t180)
cor(countsNormalized)
View(countsNormalized)
head(allData)
head(allData$seq)
rownames(allData)
rownames(allData) <- allData$seq
rownames(data_0502) <- data_0502$seq
counts <- data.frame(allData$count_t4_3, data_0502$count_aerobic.t0.1_control, data_0502$count_aerobic.t30.1_control,
data_0502$count_aerobic.t60.1_control, data_0502$count_aerobic.t180.1_control)
head(counts)
head(data.frame(allData$count_t4_3))
counts <- merge(allData[,'count_t4_3'], data_0502[,c('count_aerobic.t0.1_control','count_aerobic.t30.1_control',
'count_aerobic.t60.1_control', 'count_aerobic.t180.1_control')],by=0)
View(counts)
head(allData[,'count_t4_3'])
head(allData)
head(allData[,1])
head(allData[,2])
head(allData[,3])
head(allData[,2])
rownames(allData[,2])
counts <- merge(allData[,'seq','count_t4_3'], data_0502[,c('seq','count_aerobic.t0.1_control','count_aerobic.t30.1_control',
'count_aerobic.t60.1_control', 'count_aerobic.t180.1_control')],by='seq')
counts <- merge(allData[,c('seq','count_t4_3')], data_0502[,c('seq','count_aerobic.t0.1_control','count_aerobic.t30.1_control',
'count_aerobic.t60.1_control', 'count_aerobic.t180.1_control')],by='seq')
View(counts)
temp <- DGEList(counts=counts,group=factor(c(1:5)),genes=data_0502$seq)
temp <- calcNormFactors(temp)
temp
countsNormalized <- list()
corr(counts)
cor(counts)
counts
head(counts)
ncol(counts)
counts <- data.frame(counts[,2:ncol(counts)],row.names=counts[,1])
View(counts)
cor(counts)
plot(counts$count_t4_3 ~ counts$count_aerobic.t0.1_control)
View(data_0502)
glob2rx('count*')
colnames(data_0502)
grep('^count',colnames(data_0502))
countsOnly <- data_0502[,grep('^count',colnames(data_0502))]
View(countsOnly)
temp <- DGEList(counts=countsOnly, group=factor(1:7),genes=row.names(countsOnly))
temp <- calcNormFactors(temp)
temp
hist(countsOnly$count_aerobic.t180.6_Nor)
boxplot(countsOnly)
boxplot(countsOnly, las=2)
View(countsOnly)
countsOnly$count_aerobic.t180.6_Nor > 1000
countsOnly$count_aerobic.t180.6_Nor[countsOnly$count_aerobic.t180.6_Nor > 1000,]
countsOnly$count_aerobic.t180.6_Nor[countsOnly$count_aerobic.t180.6_Nor > 1000]
countsOnly[countsOnly$count_aerobic.t180.6_Nor > 1000, 'count_aerobic.t180.6_Nor']
head(countsOnly$count_aerobic.t180.6_Nor)
countsOnly[countsOnly$count_aerobic.t180.6_Nor > 1000, ]
countsOnly[countsOnly$count_aerobic.t180.6_Nor > 1000, ]
countsOnly[countsOnly$count_aerobic.t180.6_Nor > 10000, ]
countsOnly[countsOnly$count_aerobic.t180.6_Nor > 10000, 0:4]
countsOnly[countsOnly$count_aerobic.t180.6_Nor > 10000, 1]
countsOnly[countsOnly$count_aerobic.t180.6_Nor > 10000, 0:1]
countsOnly[countsOnly$count_aerobic.t180.6_Nor > 10000, 0:2]
countsOnly[countsOnly$count_aerobic.t180.6_Nor > 10000, c(0,3)]
countsOnly[countsOnly$count_aerobic.t180.6_Nor > 10000, c(0,2:3)]
stronglyRepresented <- countsOnly[countsOnly$count_aerobic.t180.6_Nor > 10000, ]
View(stronglyRepresented)
countsNor <- data.frame(data_0502$count_aerobic.t0.1_control, data_0502$count_aerobic.t180.6_Nor)
coutnsNor <- initCounts(countsNor)
countsNor <- initCounts(countsNor)
remove(coutnsNor)
et <- exactTest(countsNor, dispersion=.1^2)
y <- DGEList(counts=countsNor,group=group,genes=data_0502$seq)
y <- DGEList(counts=countsNor,group=c(1,2),genes=data_0502$seq)
y <- DGEList(counts=countsNor,group=factor(c(1,2)),genes=data_0502$seq)
countsNor <- data.frame(data_0502$count_aerobic.t0.1_control, data_0502$count_aerobic.t180.6_Nor)
y <- DGEList(counts=countsNor,group=factor(c(1,2)),genes=data_0502$seq)
y <- calcNormFactors(y)
et <- exactTest(countsNor, dispersion=.1^2)
et <- exactTest(y, dispersion=.1^2)
et
rownames(et$table)
et$table
y
counts$seq
data_0502$seq
summarise(data_0502)
summarise(data_0502$seq)
data_0502
summary(data_0502)
data_0502$seq == ''
data_0502[data_0502$seq == '',]
data_0502 <- read.csv('20140502.csv',quote="")
rownames(data_0502) <- data_0502$seq
counts <- merge(allData[,c('seq','count_t4_3')], data_0502[,c('seq','count_aerobic.t0.1_control','count_aerobic.t30.1_control',
'count_aerobic.t60.1_control', 'count_aerobic.t180.1_control')],by='seq')
counts <- data.frame(counts[,2:ncol(counts)],row.names=counts[,1])
temp <- DGEList(counts=counts,group=factor(c(1:5)),genes=data_0502$seq)
### prepare output file for web UI
countsNor <- data.frame(data_0502$count_aerobic.t0.1_control, data_0502$count_aerobic.t180.6_Nor)
y <- DGEList(counts=countsNor,group=factor(c(1,2)),genes=data_0502$seq)
y <- calcNormFactors(y)
et <- exactTest(y, dispersion=.1^2)
counts < countsNor
counts <- countsNor
message <- paste( counts[,1],' -> ',counts[,2],sep='')
head(message)
head(counts)
message <- paste( counts[,1],' -> ',counts[,2],sep='')
finalTable <- data.frame(as.character(data_0502$seq),allData$PValue,allData$logFC,message)
et
finalTable <- data.frame(as.character(data_0502$seq),et$table$PValue,et$table$logFC,message)
colnames(finalTable) <- c('Seq','Pval','LogFC','message')
View(finalTable)
write.csv(finalTable,'0502_nor',row.names=FALSE)
write.csv(finalTable,'0502_nor.csv',row.names=FALSE)
sum(nchar(finalTable$Seq < 20 ))
sum(nchar(finalTable$Seq)<20)
sum(nchar(as.character(finalTable$Seq)<20)
)
sum(nchar(as.character(finalTable$Seq)) < 20 )
(nchar(as.character(finalTable$Seq)) < 20 )
finalTable[(nchar(as.character(finalTable$Seq)) < 20 ),]
max(data_0502$ref)
data_0502 <- read.csv('20140502.csv',quote="")
rownames(data_0502) <- data_0502$seq
countsNor <- data.frame(data_0502$count_aerobic.t0.1_control, data_0502$count_aerobic.t180.6_Nor)
y <- DGEList(counts=countsNor,group=factor(c(1,2)),genes=data_0502$seq)
y <- calcNormFactors(y)
et <- exactTest(y, dispersion=.1^2)
counts <- countsNor # alias counts to actual variable
message <- paste( counts[,1],' -> ',counts[,2],sep='')
finalTable <- data.frame(as.character(data_0502$seq),et$table$PValue,et$table$logFC,message)
colnames(finalTable) <- c('Seq','Pval','LogFC','message')
write.csv(finalTable,'0502_nor.csv',row.names=FALSE)
finalTable[(nchar(as.character(finalTable$Seq)) < 20 ),]
finalTable[(nchar(as.character(data_0502$seq)) < 20 ),]
data_0502 <- read.csv('20140502.csv',quote="")
rownames(data_0502) <- data_0502$seq
countsNor <- data.frame(data_0502$count_aerobic.t0.1_control, data_0502$count_aerobic.t180.6_Nor)
y <- DGEList(counts=countsNor,group=factor(c(1,2)),genes=data_0502$seq)
y <- calcNormFactors(y)
et <- exactTest(y, dispersion=.1^2)
counts <- countsNor # alias counts to actual variable
message <- paste( counts[,1],' -> ',counts[,2],sep='')
finalTable <- data.frame(as.character(data_0502$seq),et$table$PValue,et$table$logFC,message)
colnames(finalTable) <- c('Seq','Pval','LogFC','message')
write.csv(finalTable,'0502_nor.csv',row.names=FALSE)
finalTable[(nchar(as.character(data_0502$seq)) < 20 ),]
View(stronglyRepresented)
countsNor <- data.frame(data_0502$count_aerobic.t0.1_control, data_0502$count_aerobic.t180.6_Nor)
countsNor <- initCounts(countsNor)
FCNor <- calcFC(countsNor)
hist(FCNor)
hist(FCNor[,1])
boxplot(FCNor[,1])
boxplot(countsNormalized)
countsOnly <- data_0502[,grep('^count',colnames(data_0502))]
temp <- DGEList(counts=countsOnly, group=factor(1:7),genes=row.names(countsOnly))
temp <- calcNormFactors(temp)
temp
1:ncol(temp)
for (i in 1:ncol(temp)) {
countsOnly[,i] <- countsOnly[,i] * temp$samples$norm.factors[i]
}
for (i in 1:ncol(temp)) {  countsOnly[,i] <- countsOnly[,i] * temp$samples$norm.factors[i] }
countsOnly <- data_0502[,grep('^count',colnames(data_0502))]
temp <- DGEList(counts=countsOnly, group=factor(1:7),genes=row.names(countsOnly))
temp <- calcNormFactors(temp)
for (i in 1:ncol(temp)) {  countsOnly[,i] <- countsOnly[,i] * temp$samples$norm.factors[i] }
View(countsOnly)
countsNormalized <- list()
for (i in 1:ncol(temp)) {  countsNormalized[,i] <- countsOnly[,i] * temp$samples$norm.factors[i] }
countsNormalized <- countsOnly
countsOnly <- data_0502[,grep('^count',colnames(data_0502))]
for (i in 1:ncol(temp)) {  countsNormalized[,i] <- countsOnly[,i] * temp$samples$norm.factors[i] }
View(countsNormalized)
cor(countsNormalized)
pairs(countsNormalized)
colnames(countsNormalized)
countsNormalized <- countsNormalized[,c(6,4,2,7,1,3,5)]
colnames(countsNormalized)
colnames(countsNormalized) <- c('t0_control','t30_control','t60_control','t180_control','t30_Rif','t180_Nor','t180_Gent')
pairs(countsNormalized)
boxplot(countsNormalized)
boxplot(countsNormalized,lsa=2)
boxplot(countsNormalized, las=2)
boxplot(countsNormalized, las=2, outline=False)
boxplot(countsNormalized, las=2, outline=F)
boxplot(countsNormalized, las=2)
par(mar=c(7,5,1,1))
boxplot(countsNormalized, las=2)
par(mar=c(3,4,1,1))
boxplot(countsNormalized, las=2)
par(mar=c(5,4,1,1))
boxplot(countsNormalized, las=2)
par(mar=c(6,4,1,1))
boxplot(countsNormalized, las=2)
boxplot(countsNormalized, las=2,ylim=c(0,500))
boxplot(countsNormalized, las=2,ylim=c(0,5000))
cor(countsNormalized)
summary(countsNormalized)
apply(countsNormalized <= 5,2,sum)
apply(countsNormalized <= 0,2,sum)
apply(countsNormalized <= 1,2,sum)
apply(countsNormalized == 1,2,sum)
apply(countsNormalized == 2,2,sum)
apply(countsNormalized == 3,2,sum)
apply(countsNormalized == 4,2,sum)
apply(countsNormalized == 5,2,sum)
View(countsNormalized)
apply(countsNormalized <= 1,2,sum)
apply(countsNormalized <= 0,2,sum)
apply(countsNormalized <= 5,2,sum)
apply(countsNormalized <= 3,2,sum)
apply(countsNormalized <= 2,2,sum)
apply(countsNormalized <= 5,2,sum)
apply(countsNormalized <= 10,2,sum)
summary(countsNormalized)
boxplot(countsNormalized, outline=0)
mean(countsNormalized)
apply(countsNormalized,2,mean)
abline(h=apply(countsNormalized,2,mean))
points(h=apply(countsNormalized,2,mean))
tapply(countsNormalized,2,mean)
library(ggplot2)
qplot(data=countsNormalized,geom='boxplot')
library(reshape2)
coutnsLong <- melt(countsNormalized)
View(coutnsLong)
countsLong <- melt(countsNormalized)
remove(coutnsLong)
qplot(variable,value,geom='boxplot')
qplot(variable,value,data=countsLong,geom='boxplot')
boxplot(countsNormalized, outline=0)
colMeans(countsNormalized)
points(colMeans(countsNormalized))
points(colMeans(countsNormalized),pch=22)
boxplot(countsNormalized, outline=0)
points(colMeans(countsNormalized),pch=22)
boxplot(countsNormalized, outline=0, las=2)
points(colMeans(countsNormalized),pch=22)
View(countsNormalized)
countsOnly <- data_0502[,grep('^count',colnames(data_0502))]
temp <- DGEList(counts=countsOnly, group=factor(1:7), genes=row.names(countsOnly))
temp <- calcNormFactors(temp)
for (i in 1:ncol(temp)) {  countsNormalized[,i] <- countsOnly[,i] * temp$samples$norm.factors[i] }
countsNormalized <- countsNormalized[,c(6,4,2,7,1,3,5)]
colnames(countsNormalized) <- c('t0_control','t30_control','t60_control','t180_control','t30_Rif','t180_Nor','t180_Gent')
View(countsNormalized)
countsAdj <- countsNormalized + 1
View(countsAdj)
countsAdj <- log2(countsAdj)
View(countsAdj)
boxplot(countsNormalized, outline=0, las=2)
boxplot(countsNormalized, outline=1, las=2)
boxplot(countsAdj, outline=1, las=2)
boxplot(countsNormalized, outline=1, las=2)
apply(countsNormalized>5000,2,sum)
subset <- countsNormalized$t180_Nor < 5000
countsSubset <- countsNormalized[subset, ]
cor(countsSubset)
countsSubset <- log2(1+countsSubset)
cor(countsSubset)
pairs(countsSubset)
countsSubset <- countsNormalized[subset, ]
pairs(countsSubset)
allData <- read.csv('selected.csv')
counts <- allData[,-1]
countsNormalized <- data.frame(apply(counts, 2, function(x){x=x+1;return(x*2000000/sum(x))}))
allData['aaaagtataaggggtaaaca',]
rownames(allData) <- allData$seq
allData['aaaagtataaggggtaaaca',]
